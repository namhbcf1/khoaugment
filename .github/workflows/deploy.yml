name: Deploy KhoChuan POS to Cloudflare
# Automated deployment workflow for KhoChuan POS System
# Tr∆∞·ªùng Ph√°t Computer H√≤a B√¨nh

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  # Test and Quality Checks
  test:
    name: Run Tests and Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm run test

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test

      - name: Run ESLint
        run: |
          cd frontend
          npm run lint

      - name: Run type checking
        run: |
          cd frontend
          npm run type-check

      - name: Security audit
        run: |
          cd backend
          npm audit --audit-level=high
          cd ../frontend
          npm audit --audit-level=high

  # Build and Deploy Backend
  deploy-backend:
    name: Deploy Backend to Cloudflare Workers
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Setup Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: backend

      - name: Create D1 Database (if not exists)
        run: |
          cd backend
          npx wrangler d1 create khochuan-pos-prod || echo "Database already exists"

      - name: Run database migrations
        run: |
          cd backend
          npx wrangler d1 migrations apply khochuan-pos-prod --env production

      - name: Deploy to Cloudflare Workers
        run: |
          cd backend
          npx wrangler deploy --env production

      - name: Verify deployment
        run: |
          cd backend
          curl -f https://khochuan-pos-api.workers.dev/health || exit 1

  # Build and Deploy Frontend
  deploy-frontend:
    name: Deploy Frontend to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build
        env:
          VITE_API_URL: https://khochuan-pos-api.workers.dev

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: khochuan-pos
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  # Post-deployment tests
  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci

      - name: Install Playwright
        run: npx playwright install

      - name: Run integration tests
        run: |
          npx playwright test
        env:
          BASE_URL: https://khochuan-pos.pages.dev
          API_URL: https://khochuan-pos-api.workers.dev

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # Notify deployment status
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend, integration-tests]
    if: always()
    steps:
      - name: Notify success
        if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success'
        run: |
          echo "üéâ Deployment successful!"
          echo "Frontend: https://khochuan-pos.pages.dev"
          echo "Backend: https://khochuan-pos-api.workers.dev"

      - name: Notify failure
        if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          exit 1
